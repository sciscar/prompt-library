{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","prompts","setPrompts","useState","formData","setFormData","categoria","einaIA","puntuacio","etiquetes","textPrompt","searchTag","setSearchTag","selectedCategory","setSelectedCategory","useEffect","savedPrompts","JSON","parse","localStorage","getItem","handleChange","e","[object Object]","target","name","value","categories","Array","from","Set","map","p","filter","cat","filteredPrompts","prompt","matchTag","includes","trim","matchCategory","React","createElement","style","padding","marginBottom","htmlFor","marginRight","type","id","onChange","placeholder","index","key","length","join","background","marginTop","onSubmit","preventDefault","newPrompt","Number","split","tag","updatedPrompts","setItem","stringify","required","rows","cols","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JA0MeA,MAxMf,WAEE,MAAOC,EAASC,GAAcC,mBAAS,KAChCC,EAAUC,GAAeF,mBAAS,CACvCG,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,UAAW,GACXC,WAAY,MAIPC,EAAWC,GAAgBT,mBAAS,KACpCU,EAAkBC,GAAuBX,mBAAS,IAGzDY,oBAAU,KACR,MAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GACpElB,EAAWc,IACV,IAGH,MAAMK,EAAgBC,IACpBjB,EAAY,IACPD,EACHmB,CAACD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,SAoCxBC,EAAaC,MAAMC,KAAK,IAAIC,IAAI7B,EAAQ8B,IAAIC,GAAKA,EAAE1B,aAAa2B,OAAOC,GAAOA,GAG9EC,EAAkBlC,EAAQgC,OAAOG,IAErC,MAAMC,EAAyB,KAAd1B,GAEbyB,EAAO3B,UAAU6B,SAAS3B,EAAU4B,QAGlCC,EAAqC,KAArB3B,GAElBuB,EAAO9B,YAAcO,EAEzB,OAAOwB,GAAYG,IAGrB,OACEC,IAAAC,cAAA,OAAKC,MAAO,CAAEC,QAAS,SACrBH,IAAAC,cAAA,UAAI,yBAGJD,IAAAC,cAAA,OAAKC,MAAO,CAAEE,aAAc,SAC1BJ,IAAAC,cAAA,SAAOI,QAAQ,YAAYH,MAAO,CAAEI,YAAa,SAAU,uBAC3DN,IAAAC,cAAA,SACEM,KAAK,OACLC,GAAG,YACHvB,MAAOf,EACPuC,SAAW5B,GAAMV,EAAaU,EAAEE,OAAOE,OACvCyB,YAAY,6BAKhBV,IAAAC,cAAA,OAAKC,MAAO,CAAEE,aAAc,SAC1BJ,IAAAC,cAAA,SAAOI,QAAQ,iBAAiBH,MAAO,CAAEI,YAAa,SAAU,yBAChEN,IAAAC,cAAA,UACEO,GAAG,iBACHvB,MAAOb,EACPqC,SAAW5B,GAAMR,EAAoBQ,EAAEE,OAAOE,QAE9Ce,IAAAC,cAAA,UAAQhB,MAAM,IAAG,SAChBC,EAAWI,IAAI,CAACG,EAAKkB,IACpBX,IAAAC,cAAA,UAAQW,IAAKD,EAAO1B,MAAOQ,GACxBA,MAOTO,IAAAC,cAAA,eACED,IAAAC,cAAA,UAAI,qBACwB,IAA3BP,EAAgBmB,OACfb,IAAAC,cAAA,SAAG,oDAEHD,IAAAC,cAAA,UACGP,EAAgBJ,IAAI,CAACK,EAAQgB,IAC5BX,IAAAC,cAAA,MAAIW,IAAKD,EAAOT,MAAO,CAAEE,aAAc,SACrCJ,IAAAC,cAAA,WAAKD,IAAAC,cAAA,cAAQ,cAAmB,IAAEN,EAAO9B,WACzCmC,IAAAC,cAAA,WAAKD,IAAAC,cAAA,cAAQ,YAAiB,IAAEN,EAAO7B,QACvCkC,IAAAC,cAAA,WAAKD,IAAAC,cAAA,cAAQ,iBAAmB,IAAEN,EAAO5B,WACzCiC,IAAAC,cAAA,WAAKD,IAAAC,cAAA,cAAQ,cAAmB,IAAEN,EAAO3B,UAAU8C,KAAK,OACxDd,IAAAC,cAAA,WAAKD,IAAAC,cAAA,cAAQ,qBACbD,IAAAC,cAAA,OAAKC,MAAO,CAAEa,WAAY,UAAWZ,QAAS,SAC3CR,EAAO1B,gBASpB+B,IAAAC,cAAA,WAASC,MAAO,CAAEc,UAAW,SAC3BhB,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,QAAMgB,SA3GUpC,IACpBA,EAAEqC,iBAGF,MAAMC,EAAY,CAChBtD,UAAWF,EAASE,UAAUiC,OAC9BhC,OAAQH,EAASG,OAAOgC,OACxB/B,UAAWqD,OAAOzD,EAASI,WAC3BC,UAAWL,EAASK,UACjBqD,MAAM,KACN/B,IAAIgC,GAAOA,EAAIxB,QACfN,OAAO8B,GAAe,KAARA,GACjBrD,WAAYN,EAASM,WAAW6B,QAI5ByB,EAAiB,IAAI/D,EAAS2D,GACpC1D,EAAW8D,GACX7C,aAAa8C,QAAQ,UAAWhD,KAAKiD,UAAUF,IAG/C3D,EAAY,CACVC,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,UAAW,GACXC,WAAY,OAkFR+B,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,cAAkBD,IAAAC,cAAA,WACzBD,IAAAC,cAAA,SACEM,KAAK,OACLvB,KAAK,YACLC,MAAOtB,EAASE,UAChB4C,SAAU7B,EACV8C,UAAQ,KAIZ1B,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,YAAgBD,IAAAC,cAAA,WACvBD,IAAAC,cAAA,SACEM,KAAK,OACLvB,KAAK,SACLC,MAAOtB,EAASG,OAChB2C,SAAU7B,EACV8C,UAAQ,KAIZ1B,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,iBAAkBD,IAAAC,cAAA,WACzBD,IAAAC,cAAA,SACEM,KAAK,SACLvB,KAAK,YACLC,MAAOtB,EAASI,UAChB0C,SAAU7B,EACV8C,UAAQ,KAIZ1B,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,oCAAwCD,IAAAC,cAAA,WAC/CD,IAAAC,cAAA,SACEM,KAAK,OACLvB,KAAK,YACLC,MAAOtB,EAASK,UAChByC,SAAU7B,KAIdoB,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,oBAAwBD,IAAAC,cAAA,WAC/BD,IAAAC,cAAA,YACEjB,KAAK,aACL2C,KAAK,IACLC,KAAK,KACL3C,MAAOtB,EAASM,WAChBwC,SAAU7B,EACV8B,YAAY,uCAIhBV,IAAAC,cAAA,UAAQM,KAAK,SAASL,MAAO,CAAEc,UAAW,SAAU,oBCvL/Ca,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAnD,EAAA,GAAAoD,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7C,IAAAC,cAACD,IAAM8C,WAAU,KACf9C,IAAAC,cAAC1C,EAAG,QAORsE","file":"static/js/main.b1bdab57.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  // ESTAT PRINCIPAL\n  const [prompts, setPrompts] = useState([]);\n  const [formData, setFormData] = useState({\n    categoria: '',\n    einaIA: '',\n    puntuacio: '',\n    etiquetes: '',\n    textPrompt: ''\n  });\n\n  // ESTAT PER A FILTRES\n  const [searchTag, setSearchTag] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  // CARREGAR PROMPTS DES DE localStorage\n  useEffect(() => {\n    const savedPrompts = JSON.parse(localStorage.getItem('prompts')) || [];\n    setPrompts(savedPrompts);\n  }, []);\n\n  // GESTIÓ DE CANVIS AL FORMULARI\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // AFEGIR UN NOU PROMPT\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Convertir puntuació a número i etiquetes a array\n    const newPrompt = {\n      categoria: formData.categoria.trim(),\n      einaIA: formData.einaIA.trim(),\n      puntuacio: Number(formData.puntuacio),\n      etiquetes: formData.etiquetes\n        .split(',')\n        .map(tag => tag.trim())\n        .filter(tag => tag !== ''),\n      textPrompt: formData.textPrompt.trim()\n    };\n\n    // Afegir el nou prompt a la llista\n    const updatedPrompts = [...prompts, newPrompt];\n    setPrompts(updatedPrompts);\n    localStorage.setItem('prompts', JSON.stringify(updatedPrompts));\n\n    // Netejar el formulari\n    setFormData({\n      categoria: '',\n      einaIA: '',\n      puntuacio: '',\n      etiquetes: '',\n      textPrompt: ''\n    });\n  };\n\n  // LLISTA DE CATEGORIES (extretes dels prompts)\n  const categories = Array.from(new Set(prompts.map(p => p.categoria))).filter(cat => cat);\n\n  // FILTRAR PROMPTS SEGONS EL TAG I LA CATEGORIA\n  const filteredPrompts = prompts.filter(prompt => {\n    // Filtre per etiqueta (searchTag)\n    const matchTag = searchTag === '' \n      ? true \n      : prompt.etiquetes.includes(searchTag.trim());\n\n    // Filtre per categoria (selectedCategory)\n    const matchCategory = selectedCategory === '' \n      ? true \n      : prompt.categoria === selectedCategory;\n\n    return matchTag && matchCategory;\n  });\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Biblioteca de Prompts</h1>\n\n      {/* FILTRE PER ETIQUETA */}\n      <div style={{ marginBottom: '20px' }}>\n        <label htmlFor=\"searchTag\" style={{ marginRight: '10px' }}>Cerca per etiqueta:</label>\n        <input\n          type=\"text\"\n          id=\"searchTag\"\n          value={searchTag}\n          onChange={(e) => setSearchTag(e.target.value)}\n          placeholder=\"Introdueix una etiqueta\"\n        />\n      </div>\n\n      {/* DESPLEGABLE DE CATEGORIES */}\n      <div style={{ marginBottom: '20px' }}>\n        <label htmlFor=\"categoryFilter\" style={{ marginRight: '10px' }}>Filtra per categoria:</label>\n        <select\n          id=\"categoryFilter\"\n          value={selectedCategory}\n          onChange={(e) => setSelectedCategory(e.target.value)}\n        >\n          <option value=\"\">Totes</option>\n          {categories.map((cat, index) => (\n            <option key={index} value={cat}>\n              {cat}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* LLISTA DE PROMPTS */}\n      <section>\n        <h2>Llista de Prompts</h2>\n        {filteredPrompts.length === 0 ? (\n          <p>No hi ha prompts que coincideixin amb el filtre.</p>\n        ) : (\n          <ul>\n            {filteredPrompts.map((prompt, index) => (\n              <li key={index} style={{ marginBottom: '20px' }}>\n                <div><strong>Categoria:</strong> {prompt.categoria}</div>\n                <div><strong>Eina IA:</strong> {prompt.einaIA}</div>\n                <div><strong>Puntuació:</strong> {prompt.puntuacio}</div>\n                <div><strong>Etiquetes:</strong> {prompt.etiquetes.join(', ')}</div>\n                <div><strong>Text del Prompt:</strong></div>\n                <pre style={{ background: '#f4f4f4', padding: '10px' }}>\n                  {prompt.textPrompt}\n                </pre>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      {/* FORMULARI PER AFEGIR UN NOU PROMPT */}\n      <section style={{ marginTop: '40px' }}>\n        <h2>Crear un Nou Prompt</h2>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label>Categoria:</label><br/>\n            <input\n              type=\"text\"\n              name=\"categoria\"\n              value={formData.categoria}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Eina IA:</label><br/>\n            <input\n              type=\"text\"\n              name=\"einaIA\"\n              value={formData.einaIA}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Puntuació:</label><br/>\n            <input\n              type=\"number\"\n              name=\"puntuacio\"\n              value={formData.puntuacio}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Etiquetes (separades per comes):</label><br/>\n            <input\n              type=\"text\"\n              name=\"etiquetes\"\n              value={formData.etiquetes}\n              onChange={handleChange}\n            />\n          </div>\n\n          <div>\n            <label>Text del Prompt:</label><br/>\n            <textarea\n              name=\"textPrompt\"\n              rows=\"4\"\n              cols=\"50\"\n              value={formData.textPrompt}\n              onChange={handleChange}\n              placeholder=\"Escriu el contingut del prompt...\"\n            />\n          </div>\n\n          <button type=\"submit\" style={{ marginTop: '10px' }}>Crear Prompt</button>\n        </form>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
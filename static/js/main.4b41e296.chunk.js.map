{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","prompts","setPrompts","useState","showForm","setShowForm","formData","setFormData","categoria","einaIA","puntuacio","etiquetes","textPrompt","searchTag","setSearchTag","selectedCategory","setSelectedCategory","useEffect","savedPrompts","JSON","parse","localStorage","getItem","handleChange","e","[object Object]","target","name","value","categories","Array","from","Set","map","p","filter","cat","filteredPrompts","prompt","matchTag","includes","trim","matchCategory","React","createElement","style","padding","fontFamily","display","justifyContent","alignItems","onClick","fontSize","cursor","title","marginTop","marginBottom","htmlFor","marginRight","type","id","onChange","placeholder","index","key","length","listStyle","border","join","background","onSubmit","preventDefault","newPrompt","Number","split","tag","updatedPrompts","setItem","stringify","required","rows","cols","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4b41e296.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  // ESTATS PRINCIPALS\n  const [prompts, setPrompts] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    categoria: '',\n    einaIA: '',\n    puntuacio: '',\n    etiquetes: '',\n    textPrompt: ''\n  });\n\n  // ESTATS PER FILTRAR\n  const [searchTag, setSearchTag] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  // Carregar els prompts des de localStorage\n  useEffect(() => {\n    const savedPrompts = JSON.parse(localStorage.getItem('prompts')) || [];\n    setPrompts(savedPrompts);\n  }, []);\n\n  // Gestionar canvis als camps del formulari\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Enviar el formulari per afegir un nou prompt\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newPrompt = {\n      categoria: formData.categoria.trim(),\n      einaIA: formData.einaIA.trim(),\n      puntuacio: Number(formData.puntuacio),\n      etiquetes: formData.etiquetes\n        .split(',')\n        .map(tag => tag.trim())\n        .filter(tag => tag !== ''),\n      textPrompt: formData.textPrompt.trim()\n    };\n\n    const updatedPrompts = [...prompts, newPrompt];\n    setPrompts(updatedPrompts);\n    localStorage.setItem('prompts', JSON.stringify(updatedPrompts));\n\n    // Netejar el formulari i tancar-lo\n    setFormData({\n      categoria: '',\n      einaIA: '',\n      puntuacio: '',\n      etiquetes: '',\n      textPrompt: ''\n    });\n    setShowForm(false);\n  };\n\n  // Obtenir categories úniques\n  const categories = Array.from(new Set(prompts.map(p => p.categoria))).filter(cat => cat);\n\n  // Filtrar prompts segons etiqueta i categoria\n  const filteredPrompts = prompts.filter(prompt => {\n    const matchTag = searchTag === '' \n      ? true \n      : prompt.etiquetes.includes(searchTag.trim());\n    const matchCategory = selectedCategory === '' \n      ? true \n      : prompt.categoria === selectedCategory;\n    return matchTag && matchCategory;\n  });\n\n  return (\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\n      {/* Capçalera amb el botó \"+\" */}\n      <header style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <h1>Biblioteca de Prompts</h1>\n        <button \n          onClick={() => setShowForm(!showForm)}\n          style={{\n            fontSize: '24px',\n            padding: '5px 10px',\n            cursor: 'pointer'\n          }}\n          title=\"Afegir nou prompt\"\n        >\n          +\n        </button>\n      </header>\n\n      {/* Secció de filtres */}\n      <div style={{ marginTop: '20px', marginBottom: '20px' }}>\n        <div style={{ marginBottom: '10px' }}>\n          <label htmlFor=\"searchTag\" style={{ marginRight: '10px' }}>Cerca per etiqueta:</label>\n          <input\n            type=\"text\"\n            id=\"searchTag\"\n            value={searchTag}\n            onChange={(e) => setSearchTag(e.target.value)}\n            placeholder=\"Introdueix una etiqueta\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"categoryFilter\" style={{ marginRight: '10px' }}>Filtra per categoria:</label>\n          <select\n            id=\"categoryFilter\"\n            value={selectedCategory}\n            onChange={(e) => setSelectedCategory(e.target.value)}\n          >\n            <option value=\"\">Totes</option>\n            {categories.map((cat, index) => (\n              <option key={index} value={cat}>\n                {cat}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Llista de Prompts */}\n      <section>\n        <h2>Llista de Prompts</h2>\n        {filteredPrompts.length === 0 ? (\n          <p>No hi ha prompts que coincideixin amb el filtre.</p>\n        ) : (\n          <ul style={{ listStyle: 'none', padding: 0 }}>\n            {filteredPrompts.map((prompt, index) => (\n              <li key={index} style={{ border: '1px solid #ddd', padding: '10px', marginBottom: '10px' }}>\n                <div><strong>Categoria:</strong> {prompt.categoria}</div>\n                <div><strong>Eina IA:</strong> {prompt.einaIA}</div>\n                <div><strong>Puntuació:</strong> {prompt.puntuacio}</div>\n                <div><strong>Etiquetes:</strong> {prompt.etiquetes.join(', ')}</div>\n                <div><strong>Text del Prompt:</strong></div>\n                <pre style={{ background: '#f4f4f4', padding: '10px' }}>\n                  {prompt.textPrompt}\n                </pre>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      {/* Formulari per afegir nou prompt (apareix al clicar el botó \"+\") */}\n      {showForm && (\n        <section style={{ marginTop: '40px' }}>\n          <h2>Crear un Nou Prompt</h2>\n          <form onSubmit={handleSubmit}>\n            <div style={{ marginBottom: '10px' }}>\n              <label>Categoria:</label><br/>\n              <input\n                type=\"text\"\n                name=\"categoria\"\n                value={formData.categoria}\n                onChange={handleChange}\n                required\n              />\n            </div>\n\n            <div style={{ marginBottom: '10px' }}>\n              <label>Eina IA:</label><br/>\n              <input\n                type=\"text\"\n                name=\"einaIA\"\n                value={formData.einaIA}\n                onChange={handleChange}\n                required\n              />\n            </div>\n\n            <div style={{ marginBottom: '10px' }}>\n              <label>Puntuació:</label><br/>\n              <input\n                type=\"number\"\n                name=\"puntuacio\"\n                value={formData.puntuacio}\n                onChange={handleChange}\n                required\n              />\n            </div>\n\n            <div style={{ marginBottom: '10px' }}>\n              <label>Etiquetes (separades per comes):</label><br/>\n              <input\n                type=\"text\"\n                name=\"etiquetes\"\n                value={formData.etiquetes}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div style={{ marginBottom: '10px' }}>\n              <label>Text del Prompt:</label><br/>\n              <textarea\n                name=\"textPrompt\"\n                rows=\"4\"\n                cols=\"50\"\n                value={formData.textPrompt}\n                onChange={handleChange}\n                placeholder=\"Escriu el contingut del prompt...\"\n              />\n            </div>\n\n            <button type=\"submit\" style={{ marginRight: '10px' }}>Crear Prompt</button>\n            <button type=\"button\" onClick={() => setShowForm(false)}>\n              Cancel·lar\n            </button>\n          </form>\n        </section>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
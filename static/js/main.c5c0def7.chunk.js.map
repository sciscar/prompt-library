{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","prompts","setPrompts","useState","formData","setFormData","categoria","einaIA","puntuacio","etiquetes","useEffect","savedPrompts","JSON","parse","localStorage","getItem","handleChange","e","[object Object]","target","name","value","React","createElement","style","padding","map","prompt","index","key","join","marginTop","onSubmit","preventDefault","newPrompt","Number","split","tag","trim","updatedPrompts","setItem","stringify","type","onChange","required","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JA8FeA,MA5Ff,WACE,MAAOC,EAASC,GAAcC,mBAAS,KAChCC,EAAUC,GAAeF,mBAAS,CACvCG,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,UAAW,KAIbC,oBAAU,KACR,MAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GACpEb,EAAWS,IACV,IAGH,MAAMK,EAAgBC,IACpBZ,EAAY,IACPD,EACHc,CAACD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,SA8B9B,OACEC,IAAAC,cAAA,OAAKC,MAAO,CAAEC,QAAS,SACrBH,IAAAC,cAAA,UAAI,yBAGJD,IAAAC,cAAA,eACED,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,UACGtB,EAAQyB,IAAI,CAACC,EAAQC,IACpBN,IAAAC,cAAA,MAAIM,IAAKD,GACPN,IAAAC,cAAA,cAASI,EAAOrB,WAAmB,MAAIqB,EAAOpB,OAAO,oBAAeoB,EAAOnB,UAAU,iBAAemB,EAAOlB,UAAUqB,KAAK,UAOlIR,IAAAC,cAAA,WAASC,MAAO,CAAEO,UAAW,SAC3BT,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,QAAMS,SA5CUf,IACpBA,EAAEgB,iBAGF,MAAMC,EAAY,CAChB5B,UAAWF,EAASE,UACpBC,OAAQH,EAASG,OACjBC,UAAW2B,OAAO/B,EAASI,WAC3BC,UAAWL,EAASK,UAAU2B,MAAM,KAAKV,IAAIW,GAAOA,EAAIC,SAIpDC,EAAiB,IAAItC,EAASiC,GACpChC,EAAWqC,GACXzB,aAAa0B,QAAQ,UAAW5B,KAAK6B,UAAUF,IAG/ClC,EAAY,CACVC,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,UAAW,OAwBPa,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,cACPD,IAAAC,cAAA,SAAOmB,KAAK,OAAOtB,KAAK,YAAYC,MAAOjB,EAASE,UAAWqC,SAAU3B,EAAc4B,UAAQ,KAEjGtB,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,YACPD,IAAAC,cAAA,SAAOmB,KAAK,OAAOtB,KAAK,SAASC,MAAOjB,EAASG,OAAQoC,SAAU3B,EAAc4B,UAAQ,KAE3FtB,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,iBACPD,IAAAC,cAAA,SAAOmB,KAAK,SAAStB,KAAK,YAAYC,MAAOjB,EAASI,UAAWmC,SAAU3B,EAAc4B,UAAQ,KAEnGtB,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,oCACPD,IAAAC,cAAA,SAAOmB,KAAK,OAAOtB,KAAK,YAAYC,MAAOjB,EAASK,UAAWkC,SAAU3B,EAAc4B,UAAQ,KAEjGtB,IAAAC,cAAA,UAAQmB,KAAK,UAAS,oBC3EjBG,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAA/B,EAAA,GAAAgC,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvC,IAAAC,cAACD,IAAMwC,WAAU,KACfxC,IAAAC,cAACvB,EAAG,QAOR6C","file":"static/js/main.c5c0def7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [prompts, setPrompts] = useState([]);\n  const [formData, setFormData] = useState({\n    categoria: '',\n    einaIA: '',\n    puntuacio: '',\n    etiquetes: ''\n  });\n\n  // Carregar els prompts des de localStorage al muntar el component\n  useEffect(() => {\n    const savedPrompts = JSON.parse(localStorage.getItem('prompts')) || [];\n    setPrompts(savedPrompts);\n  }, []);\n\n  // Gestionar els canvis en els camps del formulari\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Gestionar l'enviament del formulari\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Convertir la puntuació a número i les etiquetes a un array (separades per comes)\n    const newPrompt = {\n      categoria: formData.categoria,\n      einaIA: formData.einaIA,\n      puntuacio: Number(formData.puntuacio),\n      etiquetes: formData.etiquetes.split(',').map(tag => tag.trim())\n    };\n\n    // Afegir el nou prompt a la llista existent\n    const updatedPrompts = [...prompts, newPrompt];\n    setPrompts(updatedPrompts);\n    localStorage.setItem('prompts', JSON.stringify(updatedPrompts));\n\n    // Netejar el formulari\n    setFormData({\n      categoria: '',\n      einaIA: '',\n      puntuacio: '',\n      etiquetes: ''\n    });\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Biblioteca de Prompts</h1>\n      \n      {/* Llista de Prompts */}\n      <section>\n        <h2>Llista de Prompts</h2>\n        <ul>\n          {prompts.map((prompt, index) => (\n            <li key={index}>\n              <strong>{prompt.categoria}</strong> - {prompt.einaIA} - Puntuació: {prompt.puntuacio} - Etiquetes: {prompt.etiquetes.join(', ')}\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      {/* Formulari per afegir un nou prompt */}\n      <section style={{ marginTop: '40px' }}>\n        <h2>Crear un Nou Prompt</h2>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label>Categoria:</label>\n            <input type=\"text\" name=\"categoria\" value={formData.categoria} onChange={handleChange} required />\n          </div>\n          <div>\n            <label>Eina IA:</label>\n            <input type=\"text\" name=\"einaIA\" value={formData.einaIA} onChange={handleChange} required />\n          </div>\n          <div>\n            <label>Puntuació:</label>\n            <input type=\"number\" name=\"puntuacio\" value={formData.puntuacio} onChange={handleChange} required />\n          </div>\n          <div>\n            <label>Etiquetes (separades per comes):</label>\n            <input type=\"text\" name=\"etiquetes\" value={formData.etiquetes} onChange={handleChange} required />\n          </div>\n          <button type=\"submit\">Crear Prompt</button>\n        </form>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}